// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class TokenCreated extends ethereum.Event {
  get params(): TokenCreated__Params {
    return new TokenCreated__Params(this);
  }
}

export class TokenCreated__Params {
  _event: TokenCreated;

  constructor(event: TokenCreated) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class GovernanceTokenFactory extends ethereum.SmartContract {
  static bind(address: Address): GovernanceTokenFactory {
    return new GovernanceTokenFactory("GovernanceTokenFactory", address);
  }

  createToken(name: string, symbol: string, totalSupply: BigInt): Address {
    let result = super.call(
      "createToken",
      "createToken(string,string,uint256):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromUnsignedBigInt(totalSupply)
      ]
    );

    return result[0].toAddress();
  }

  try_createToken(
    name: string,
    symbol: string,
    totalSupply: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createToken",
      "createToken(string,string,uint256):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromUnsignedBigInt(totalSupply)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  settokengenerator(_tokengenerator: Address): Address {
    let result = super.call(
      "settokengenerator",
      "settokengenerator(address):(address)",
      [ethereum.Value.fromAddress(_tokengenerator)]
    );

    return result[0].toAddress();
  }

  try_settokengenerator(
    _tokengenerator: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "settokengenerator",
      "settokengenerator(address):(address)",
      [ethereum.Value.fromAddress(_tokengenerator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokengenerator(): Address {
    let result = super.call("tokengenerator", "tokengenerator():(address)", []);

    return result[0].toAddress();
  }

  try_tokengenerator(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokengenerator",
      "tokengenerator():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateTokenCall extends ethereum.Call {
  get inputs(): CreateTokenCall__Inputs {
    return new CreateTokenCall__Inputs(this);
  }

  get outputs(): CreateTokenCall__Outputs {
    return new CreateTokenCall__Outputs(this);
  }
}

export class CreateTokenCall__Inputs {
  _call: CreateTokenCall;

  constructor(call: CreateTokenCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get totalSupply(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateTokenCall__Outputs {
  _call: CreateTokenCall;

  constructor(call: CreateTokenCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class SettokengeneratorCall extends ethereum.Call {
  get inputs(): SettokengeneratorCall__Inputs {
    return new SettokengeneratorCall__Inputs(this);
  }

  get outputs(): SettokengeneratorCall__Outputs {
    return new SettokengeneratorCall__Outputs(this);
  }
}

export class SettokengeneratorCall__Inputs {
  _call: SettokengeneratorCall;

  constructor(call: SettokengeneratorCall) {
    this._call = call;
  }

  get _tokengenerator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SettokengeneratorCall__Outputs {
  _call: SettokengeneratorCall;

  constructor(call: SettokengeneratorCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
